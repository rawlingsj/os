name: CI build action

on:
  pull_request:
    branches: ['main']
  push:
    branches:
      - gh-readonly-queue/main/**

jobs:
  changes:
    name: Determine packages to test building
    runs-on: ubuntu-latest
    outputs:
      packages: ${{steps.package-list.outputs.packages}}

    steps:
      - uses: actions/checkout@v3

      - name: Look for changed files
        id: changes
        uses: tj-actions/changed-files@v35
        with:
          files: ./*.yaml

      # Assuming that we have a list of changed files such as `foo.yaml` and `bar.yaml`, this
      # strips the list down into `foo` and `bar`.
      - name: Build package list
        id: package-list
        run: |
          # Ensure there is a newline at the end of packages.txt to avoid `read` from ignoring
          # the last entry.
          echo >> $GITHUB_WORKSPACE/packages.txt

          printf "packages=" >> $GITHUB_OUTPUT

          while read pkg; do
            for file in ${{ steps.changes.outputs.all_changed_files }}; do
              [ "${file%.yaml}" = "$pkg" ] && printf "%s " ${file%.yaml} >> $GITHUB_OUTPUT
            done
          done < $GITHUB_WORKSPACE/packages.txt

          printf "\n" >> $GITHUB_OUTPUT

  build:
    name: Test building of packages
    runs-on: ubuntu-latest
    needs: changes
    container:
      image: ghcr.io/wolfi-dev/sdk:latest
      options: |
        --cap-add NET_ADMIN --cap-add SYS_ADMIN --security-opt seccomp=unconfined --security-opt apparmor:unconfined

    permissions:
      packages: write
      contents: read
      pull-requests: write # so we have permission to comment on pull requests

    steps:
      - uses: actions/checkout@v3

      - name: 'Generate local signing key'
        run: |
          make MELANGE="melange" local-melange.rsa

      - name: 'Build Wolfi'
        run: |
          for package in ${{needs.changes.outputs.packages}}; do
            make MELANGE="melange" MELANGE_EXTRA_OPTS="--create-build-log" REPO="$GITHUB_WORKSPACE/packages" BUILDWORLD=no packages/$package -j1
          done

      - name: Check for file
        id: file_check
        run: |
          if test -f "packages.log"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Check sonames
        id: soname
        if: steps.file_check.outputs.exists == 'true'
        uses: docker://ghcr.io/wolfi-dev/wolfictl:latest
        with:
          entrypoint: wolfictl
          args: check so-name

      - name: Check diff
        id: diff
        if: steps.file_check.outputs.exists == 'true'
        # Let's not fail the whole job if this step fails as it is for improved UX rather than an enforced check
        continue-on-error: true
        # uses: docker://ghcr.io/wolfi-dev/wolfictl:latest
        uses: docker://rawlingsj80/wolfictl:diff2
        with:
          entrypoint: wolfictl
          args: check diff

      - name: Check for diff file
        id: diff_file_check
        run: |
          if test -f "diff.log"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: PR comment diff
        if: steps.diff_file_check.outputs.exists == 'true'
        uses: thollander/actions-comment-pull-request@632cf9ce90574d125be56b5f3405cda41a84e2fd # v2.3.1
        with:
          filePath: diff.log
          # If a PAT exists use it else fall back to the default github actions secret
          # This means we get wolfi bot branding on PRs else uses the github actions bot email so actions will run on forks if enabled
          GITHUB_TOKEN: ${{ secrets.WOLFI_BOT_CLASSIC_PAT != null && secrets.WOLFI_BOT_CLASSIC_PAT || secrets.GITHUB_TOKEN }}
  dag:
    name: Dependency analysis
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Generate dependency svg
        id: svg
        uses: docker://ghcr.io/wolfi-dev/wolfictl:latest
        with:
          entrypoint: wolfictl
          args: svg

      - uses: actions/upload-artifact@v3
        with:
          name: dag.svg
          path: dag.svg

package:
  name: openjdk-20
  version: "20.36"
  epoch: 0
  description:
  copyright:
    - license: GPL-2.0-with-classpath-exception
  dependencies:
    runtime:
      - openjdk-20-jre
environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - build-base
      - automake
      - autoconf
      - file
      - freetype-dev
      - cups-dev
      - libx11-dev
      - libxext-dev
      - libxrender-dev
      - libxrandr-dev
      - libxtst-dev
      - libxt-dev
      - alsa-lib-dev
      - libffi-dev
      - bash
      - zip
      - fontconfig-dev
      - libxi-dev
      - libjpeg-turbo-dev
      - giflib-dev
      - lcms2-dev
      - openjdk-19-default-jvm
      - openjdk-19
# transform melange version to contain "+" rather than third "." so we can use a var in the fetch URL
var-transforms:
  - from: ${{package.version}}
    match: \.(\d+)$
    replace: +$1
    to: mangled-package-version
pipeline:
  - uses: fetch
    with:
      uri: https://github.com/openjdk/jdk20u/archive/refs/tags/jdk-${{vars.mangled-package-version}}.tar.gz
      expected-sha512: 033afb453b12125f34f7a27d676d9c5372e40c65cff8fef6a16c8d8f1b652f5f3405f7ee9ec8761fd54c761c32043e1ec53f2414a6b1e78034fa59e8a6391f97
  - working-directory: /home/build/googletest
    pipeline:
      - uses: fetch
        with:
          uri: https://github.com/google/googletest/archive/release-1.8.1.tar.gz
          expected-sha512: e6283c667558e1fd6e49fa96e52af0e415a3c8037afe1d28b7ff1ec4c2ef8f49beb70a9327b7fc77eb4052a58c4ccad8b5260ec90e4bceeac7a46ff59c4369d7
  - uses: patch
    with:
      patches: FixNullPtrCast.patch JDK-8282306_disable-test.patch JDK-8299245_disable-tests.patch
  - runs: chmod +x configure
  - uses: autoconf/configure
    with:
      opts: |
        --with-boot-jdk=/usr/lib/jvm/java-19-openjdk \
        --prefix=/usr/lib/jvm/java-20-openjdk \
        --with-vendor-name=wolfi \
        --with-vendor-url=https://wolfi.dev \
        --with-vendor-bug-url=https://github.com/wolfi-dev/os/issues \
        --with-version-opt="wolfi-r${{package.epoch}}" \
        --disable-warnings-as-errors \
        --disable-precompiled-headers \
        --enable-dtrace=no \
        --with-zlib=system \
        --with-debug-level=release \
        --with-native-debug-symbols=internal \
        --with-jvm-variants=server \
        --with-jtreg=no  \
        --with-libpng=system \
        --with-jvm-variants=server \
        --with-libjpeg=system \
        --with-giflib=system \
        --with-lcms=system \
        --with-gtest="/home/build/googletest" \
        --with-version-string="${{vars.mangled-package-version}}"
  - runs: make jdk-image
  # Check we built something valid
  - runs: |
      _java_bin="./build/*-server-release/images/jdk/bin"

      $_java_bin/javac -d . HelloWorld.java
      $_java_bin/java HelloWorld

      # NOTE: Disable flakey tests for now as we're seeing builds hang on aarch64
      # # run the gtest unittest suites
      # make test-hotspot-gtest
  - runs: |
      _java_home="usr/lib/jvm/java-20-openjdk"

      mkdir -p "${{targets.destdir}}"/$_java_home
      cp -r build/*-server-release/images/jdk/* "${{targets.destdir}}"/$_java_home
      rm "${{targets.destdir}}"/$_java_home/lib/src.zip
subpackages:
  - name: "openjdk-20-dbg"
    description: "OpenJDK 20 Java Debug Symbols"
    pipeline:
      - uses: split/debug
    dependencies:
      runtime:
        - openjdk-20
  - name: "openjdk-20-jre"
    description: "OpenJDK 20 Java Runtime Environment"
    dependencies:
      runtime:
        - freetype
        - libfontconfig1
        - openjdk-20-jre-base
    pipeline:
      - runs: |
          _java_home="usr/lib/jvm/java-20-openjdk"

          mkdir -p "${{targets.subpkgdir}}"/$_java_home/lib
          mv "${{targets.destdir}}"/$_java_home/lib/libawt_xawt.so \
              "${{targets.destdir}}"/$_java_home/lib/libfontmanager.so \
              "${{targets.destdir}}"/$_java_home/lib/libjavajpeg.so \
              "${{targets.destdir}}"/$_java_home/lib/libjawt.so \
              "${{targets.destdir}}"/$_java_home/lib/libjsound.so \
              "${{targets.destdir}}"/$_java_home/lib/liblcms.so \
              "${{targets.destdir}}"/$_java_home/lib/libsplashscreen.so \
              "${{targets.subpkgdir}}"/$_java_home/lib
  - name: "openjdk-20-jre-base"
    description: "OpenJDK 20 Java Runtime Environment (headless)"
    dependencies:
      runtime:
        - java-common
        - java-cacerts
    pipeline:
      - runs: |
          _java_home="usr/lib/jvm/java-20-openjdk"

          mkdir -p "${{targets.subpkgdir}}"/$_java_home
          mv "${{targets.destdir}}"/$_java_home/lib \
             "${{targets.subpkgdir}}"/$_java_home

          mkdir -p "${{targets.subpkgdir}}"/$_java_home/bin
          for i in java \
                    jfr \
                    jrunscript \
                    jwebserver \
                    keytool \
                    rmiregistry; do
            mv "${{targets.destdir}}"/$_java_home/bin/$i "${{targets.subpkgdir}}"/$_java_home/bin/$i
          done

          mv "${{targets.destdir}}"/$_java_home/legal "${{targets.subpkgdir}}"/$_java_home
          mv "${{targets.destdir}}"/$_java_home/conf "${{targets.subpkgdir}}"/$_java_home
          mv "${{targets.destdir}}"/$_java_home/release "${{targets.subpkgdir}}"/$_java_home
          cp ASSEMBLY_EXCEPTION \
              LICENSE \
              README.md \
             "${{targets.subpkgdir}}"/$_java_home

          # symlink to shared java cacerts store
          rm -f "${{targets.subpkgdir}}"/$_java_home/lib/security/cacerts
          ln -sf /etc/ssl/certs/java/cacerts \
            "${{targets.subpkgdir}}"/$_java_home/lib/security/cacerts

          # symlink for `java-common` to work (which expects jre in $_java_home/jre)
          ln -sf . "${{targets.subpkgdir}}/$_java_home/jre"
  - name: "openjdk-20-jmods"
    description: "OpenJDK 20 jmods"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/jvm/java-20-openjdk
          mv "${{targets.destdir}}"/usr/lib/jvm/java-20-openjdk/jmods \
             "${{targets.subpkgdir}}"/usr/lib/jvm/java-20-openjdk
  - name: "openjdk-20-doc"
    description: "OpenJDK 20 Documentation"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/jvm/java-20-openjdk
          mv "${{targets.destdir}}"/usr/lib/jvm/java-20-openjdk/man \
             "${{targets.subpkgdir}}"/usr/lib/jvm/java-20-openjdk
  - name: "openjdk-20-demos"
    description: "OpenJDK 20 Demos"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/jvm/java-20-openjdk
          mv "${{targets.destdir}}"/usr/lib/jvm/java-20-openjdk/demo \
             "${{targets.subpkgdir}}"/usr/lib/jvm/java-20-openjdk
  - name: "openjdk-20-default-jvm"
    description: "Use the openjdk-20 JVM as the default JVM"
    dependencies:
      runtime:
        - openjdk-20-jre
      provides:
        - default-jvm=1.20
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/jvm
          ln -sf java-20-openjdk "${{targets.subpkgdir}}"/usr/lib/jvm/default-jvm
  - name: "openjdk-20-default-jdk"
    description: "Use the openjdk-20 JVM as the default JVM with the JDK installed"
    dependencies:
      runtime:
        - openjdk-20-default-jvm
        - openjdk-20
      provides:
        - default-jdk=1.20
update:
  enabled: true
  shared: true
  version-transform:
    - match: \+(\d+)$
      replace: .$1
  github:
    identifier: openjdk/jdk20u
    strip-prefix: jdk-
    tag-filter: jdk-20
    use-tag: true

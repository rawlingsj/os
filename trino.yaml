package:
  name: trino
  version: "432"
  epoch: 0
  description: Official repository of Trino, the distributed SQL query engine for big data, formerly known as PrestoSQL
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - bash # some helper scripts use bash
      - openjdk-17-default-jvm
      - python3 # required by trino launcher script
environment:
  contents:
    packages:
      - wolfi-base
      - busybox
      - ca-certificates-bundle
      - curl
      - maven
      - build-base
      - openjdk-17
      - git
      - rsync
      - jvmkill
pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/trinodb/trino.git
      tag: ${{package.version}}
      expected-commit: 4ca25b49b83095cc2a19ffe31386cf0175df2466
  - runs: |
      export JAVA_HOME=/usr/lib/jvm/java-17-openjdk
      export LANG=en_US.UTF-8
      export INCLUDE="-I${JAVA_HOME}/include -I${JAVA_HOME}/include/linux"
      export CFLAGS="-Wall -Werror -fPIC -shared ${INCLUDE}"

      mkdir -p ${{targets.destdir}}/data/trino
      mkdir -p ${{targets.destdir}}/etc/trino/catalog
      mkdir -p ${{targets.destdir}}/usr/bin
      mkdir -p ${{targets.destdir}}/usr/lib/trino/bin
      mkdir -p ${{targets.destdir}}/usr/lib/trino/lib
      mkdir -p ${{targets.destdir}}/usr/lib/trino/plugin
      mkdir -p ${{targets.destdir}}/var/lib/trino
      mkdir -p ${{targets.destdir}}/etc/security/
      mkdir -p /home/build/trino-all
      mkdir -p /home/build/plugins/default/
      mkdir -p /home/build/plugins/optional/

      cd /home/build/
      mvn package -q -DskipTests -T $(nproc) -pl ':trino-server'
      tar -C /home/build/trino-all/ --strip-components 1 -xf core/trino-server/target/trino-server-${{package.version}}.tar.gz

      mvn package -q -DskipTests -T $(nproc) -pl ':trino-cli'
      chmod +x client/trino-cli/target/trino-cli-${{package.version}}-executable.jar

      rsync -av /home/build/trino-all/plugin/* /home/build/plugins/optional/
      rm -rf /home/build/trino-all/plugin/*
      rsync -av --ignore-existing /home/build/trino-all/* ${{targets.destdir}}/usr/lib/trino/
      # rsync -av --ignore-existing /home/build/plugins/default/* ${{targets.destdir}}/usr/lib/trino/plugin/

      rsync -av --ignore-existing core/docker/default/etc/* ${{targets.destdir}}/etc/trino/
      rsync -av --force core/docker/bin/* ${{targets.destdir}}/usr/lib/trino/bin/
      rsync -av --ignore-existing client/trino-cli/target/trino-cli-${{package.version}}-executable.jar ${{targets.destdir}}/usr/bin/
      rsync -av --ignore-existing /usr/lib/libjvmkill.so ${{targets.destdir}}/usr/lib/trino/bin/

      cd ${{targets.destdir}}/usr/lib/trino/bin
      for file in *; do
        if [[ -f $file ]]; then
          ln -sf ../lib/trino/bin/$file ${{targets.destdir}}/usr/bin/$file
        fi
      done
      cd /home/build/

      touch ${{targets.destdir}}/etc/security/limits.conf
      cat << EOF >> ${{targets.destdir}}/etc/security/limits.conf
      trino soft nofile 131072
      trino hard nofile 131072
      trino soft nproc 128000
      trino hard nproc 128000
      EOF
data:
  - name: plugins
    items:
      accumulo: accumulo
      atop: atop
      bigquery: bigquery
      blackhole: blackhole
      cassandra: cassandra
      clickhouse: clickhouse
      delta-lake: delta-lake
      druid: druid
      elasticsearch: elasticsearch
      example-http: example-http
      exchange-filesystem: exchange-filesystem
      exchange-hdfs: exchange-hdfs
      geospatial: geospatial
      google-sheets: google-sheets
      hive: hive
      http-event-listener: http-event-listener
      hudi: hudi
      iceberg: iceberg
      ignite: ignite
      jmx: jmx
      kafka: kafka
      kinesis: kinesis
      kudu: kudu
      local-file: local-file
      mariadb: mariadb
      memory: memory
      ml: ml
      mongodb: mongodb
      mysql: mysql
      mysql-event-listener: mysql-event-listener
      oracle: oracle
      password-authenticators: password-authenticators
      phoenix5: phoenix5
      pinot: pinot
      postgresql: postgresql
      prometheus: prometheus
      raptor-legacy: raptor-legacy
      redis: redis
      redshift: redshift
      resource-group-managers: resource-group-managers
      session-property-managers: session-property-managers
      singlestore: singlestore
      sqlserver: sqlserver
      teradata-functions: teradata-functions
      thrift: thrift
      tpcds: tpcds
      tpch: tpch
subpackages:
  - range: plugins
    name: trino-plugin-${{range.key}}
    description: Trino Plugin ${{range.key}}
    dependencies:
      runtime:
        - trino
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/trino/plugin/${{range.value}}
          cd /home/build/plugins/optional/
          cp -R ./${{range.value}}/* ${{targets.subpkgdir}}/usr/lib/trino/plugin/${{range.value}}/
update:
  enabled: true
  github:
    identifier: trinodb/trino
    use-tag: true
